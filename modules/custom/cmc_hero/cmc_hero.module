<?php
/**
 * @file
 * Code for the CMC Hero feature.
 */

include_once 'cmc_hero.features.inc';


/**
 * Implementation of hook_menu()
 */
function cmc_hero_menu() {
  $items = array();

  $items['admin/config/cmc/hero'] = array(
    'title' => 'CMC Heroes',
    'description' => 'CMC Hero Configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cmc_hero_settings'),
    'access arguments' => array('edit any cmc_hero content'),
  );

  return $items;
}

/**
 * Implementation of hook_perm().
 */
function cmc_hero_permission() {
  return array(
    'administer cmc_hero settings' => array(
      'title' => t('administer cmc_hero settings'),
     ),
  );
}


function cmc_hero_sections() {
  $sections = array(
    'cmc_hero_home' => array(
        'title' => 'Home',
        'block_title' => 'CMC Hero Home',
    ),
    'cmc_hero_cfd' => array(
        'title' => 'CFD',
        'block_title' => 'CMC Hero CFD',
    ),
    'cmc_hero_spreadbet' => array(
        'title' => 'Spreadbet',
        'block_title' => 'CMC Hero Spreadbet',
    ),
    'cmc_hero_forex' => array(
        'title' => 'Forex',
        'block_title' => 'CMC Hero Forex',
    ),
    'cmc_hero_markets' => array(
        'title' => 'Markets',
        'block_title' => 'CMC Hero Markets',
    ),
    'cmc_hero_education' => array(
        'title' => 'Education',
        'block_title' => 'CMC Hero Education',
    ),
    'cmc_hero_news_analysis' => array(
        'title' => 'News And Analysis',
        'block_title' => 'CMC Hero News and Analysis',
    ),
    'cmc_hero_about' => array(
        'title' => 'About Us',
        'block_title' => 'CMC Hero About us',
    ),
  );

  return $sections;
}


/**
 * Hero Settings
 */
function cmc_hero_settings() {

  // Get list of nodes that can be put into the hero area
  if (user_access('administer cmc_hero settings')) {
    $view = views_get_view('cmc_hero');
    $content = $view->preview('hero_list');
  
    $options = array('' => 'None');
    foreach ($view->result as $res) {
      $options[$res->nid] = '(' . $res->node_type . '): '  . $res->node_title;
    }
  
    $form = array();
    $sections = cmc_hero_sections();
  
    foreach ($sections as $section => $values) {
      $section_title = $values['title'];
      _cmc_hero_setting_add_section($form, strtolower($section_title), $section_title, $section, $options);
    }
  
    $var_name = 'cmc_hero_home_bottom';
    $form['home'][$var_name] = _cmc_hero_setting_dropdown($var_name, 'Bottom Hero Node', $options);
  }
  
  // Transition Settings
  $form['transition_settings'] = array(
      '#type' => 'fieldset',
      '#title' => 'Transition Settings',
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
  );
 $form['transition_settings']['cmc_hero_transition_speed'] = array(
       '#type'           => 'textfield',
       '#title'          => t('Tranisition Delay'),
       '#default_value'  => variable_get('cmc_hero_transition_speed', '4000'),
       '#size'           => 20,
       '#description'    => t('The delay in milliseconds between image transitions'),
  );
  
  return system_settings_form($form);
}


//Implementation of hook init()
function cmc_hero_init() {
  drupal_add_js(
    array(
      'cmc_hero' => array(
        'transition_speed' => variable_get('cmc_hero_transition_speed', ''),
      )
    ),
    'setting'
  );
}


/**
 * Helper to add a new hero section
 * @param unknown_type $form
 * @param unknown_type $section
 * @param unknown_type $section_title
 * @param unknown_type $var_name
 * @param unknown_type $options
 */
function _cmc_hero_setting_add_section(&$form, $section, $section_title, $var_name, $options) {
  $form[$section] = array(
      '#type' => 'fieldset',
      '#title' => t($section_title),
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
  );

  $form[$section][$var_name] = _cmc_hero_setting_dropdown($var_name, 'Hero Node', $options);
}


/**
 * Helper to add a select option
 * @param unknown_type $var_name
 * @param unknown_type $title
 * @param unknown_type $options
 * @return multitype:string unknown
 */
function _cmc_hero_setting_dropdown($var_name, $title, $options) {
  // to bring back to this page if they edit the node
  $edit_link_options = array(
    'query' => array(
      'destination' => $_GET['q'],
    ),
  );

  $nid = variable_get($var_name, '');
  $description = ($nid) ? l('Edit Node', 'node/' . $nid . '/edit', $edit_link_options) : '';
  $el = array(
    '#type' => 'select',
    '#title' => $title,
    '#options' => $options,
    '#default_value' => $nid,
    '#description' => $description,
  );

  return $el;
}



/**
 * hook_block_info
 */
function cmc_hero_block_info() {

  $blocks = array();
  $sections = cmc_hero_sections();

  foreach ($sections as $section => $values) {
    $blocks[$section] = array(
      'info' => t($values['block_title']),
    );
  }

  $blocks['cmc_hero_home_bottom'] = array(
      'info' => t('CMC Hero Home Bottom'),
  );

  return $blocks;
}


/**
 * hook_block_view
 * @param unknown_type $delta
 */
function cmc_hero_block_view($delta = '') {

  $block = array();
  $sections = cmc_hero_sections();

  foreach ($sections as $section => $values) {

    $nid = variable_get($section, '');
    if ($delta == $section) {
      $block['content'] = cmc_hero_block_content($nid);
    }
  }

  if ($delta == 'cmc_hero_home_bottom') {
    $nid = variable_get('cmc_hero_home_bottom', '');
    $block['content'] = cmc_hero_block_content($nid, 'bottom');
  }

  return $block;
}


/**
 *
 * @param unknown_type $nid
 */
function cmc_hero_block_content($nid, $type='hero') {

  $view = views_get_view('cmc_hero');
  $view->preview('hero', array($nid));

  if (!count($view->result)) {
    return;
  }

  if ($view->result[0]->node_type == 'cmc_triptych') {
    $view = views_get_view('cmc_triptych');
    $content = $view->preview('header', array($nid));
    $node = node_load($nid);
    $path = drupal_get_path('module', 'cmc_triptych');
    drupal_add_js($path . '/js/cmc_triptych.js');
    drupal_add_css($path . '/css/cmc_triptych.css');
    
    $edit = '';
    if (user_access('edit any cmc_triptych content')) {
      $options = array(
        'query' => array(
          'destination' => $_GET['q'],
        ),
      );
      $edit = l('Edit Triptych', 'node/' . $view->result[0]->nid . '/edit', $options);
    }
    
    $data = array(
    	'content' => $content,
      'node' => $node,
    	'edit' => $edit
    );
    return theme('cmc_hero_triptych', $data);
  }

  $fields = array(
    'image_field' => 'field_field_hero_image',
    'content_field' => 'field_field_hero_content',
    'class' => 'field_field_hero_class',
  );

  $num_rows = 4;
  $rows = _cmc_hero_get_views_content($view, $fields, $num_rows);

  $path = drupal_get_path('module', 'cmc_hero');
  drupal_add_css($path . '/css/cmc_hero.css');
  drupal_add_js($path . '/js/jquery.cycle.all.js');
  drupal_add_js($path . '/js/cmc_hero.js');


  $edit = '';
  if (user_access('edit any cmc_hero content')) {
    $options = array(
      'query' => array(
        'destination' => $_GET['q'],
      ),
    );
    $edit = l('Edit Hero', 'node/' . $view->result[0]->nid . '/edit', $options);
  }

  if ($type == 'bottom') {
    return theme('cmc_hero_banners', array('rows' => $rows, 'edit' => $edit));
  }

  return theme('cmc_hero_heroes', array('rows' => $rows, 'edit' => $edit));
}



/**
 *
 * @param unknown_type $view
 * @param unknown_type $fields
 * @param unknown_type $num_rows
 */
function _cmc_hero_get_views_content($view, $fields, $num_rows) {
  // now loop thru the results
  $rows = array();

  for ($i=1; $i<=$num_rows; $i++) {

    $row = array();
    $image_field_name = $fields['image_field'] . $i;
    $content_field_name = $fields['content_field'] . $i;
    $class_field_name = $fields['class'] . $i;

    // get the image
    if (!empty($view->result[0]->{$image_field_name}[0]['rendered'])) {

      $rendered = $view->result[0]->{$image_field_name}[0]['rendered'];
      $vars = array(
          'item' => $rendered['#item'],
          'path' => $rendered['#path'],
          'image_style' => $rendered['#image_style'],
      );

      $row['image'] = theme('image_formatter', $vars);
    }

    // get the content
    if (!empty($view->result[0]->{$content_field_name}[0]['rendered']['#markup'])) {
      $content = $view->result[0]->{$content_field_name}[0]['rendered']['#markup'];
      $row['content'] = $content;
    }
    
    if (!empty($view->result[0]->{$class_field_name}[0]['rendered']['#markup'])) {
      $content = $view->result[0]->{$class_field_name}[0]['rendered']['#markup'];
      $row['class'] = $content;
    }

    if (!empty($row)) {
      $rows[] = $row;
    }
  }

  return $rows;
}


/**
 * hook_theme
 */
function cmc_hero_theme($existing, $type, $theme, $path) {
  return array(
    'cmc_hero_heroes' => array(
      'template'	=> 'theme/cmc_hero_heroes',
      'variables' => array(
        'data' => NULL
      ),
    ),
    'cmc_hero_banners' => array(
      'template'	=> 'theme/cmc_hero_banners',
      'variables' => array(
        'data' => NULL
      ),
    ),
    'cmc_hero_triptych' => array(
      'template'	=> 'theme/cmc_hero_triptych',
      'variables' => array(
        'data' => NULL
      ),
    ),
  );
}


function cmc_hero_form_alter(&$form, &$form_state, $form_id) {
  //echo $form_id;
  //print_r($form);
  if ($form_id == 'cmc_hero_node_form') {
    $options = array(      
      'fragment' => 'edit-transition-settings',      
    );
    
    $form['title']['#suffix'] = l('CHANGE HERO TRANSITION DELAY', 'admin/config/cmc/hero', $options) . '. this will affect ALL heroes.';
  }
}


